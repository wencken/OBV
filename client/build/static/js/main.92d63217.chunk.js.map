{"version":3,"sources":["constants/index.js","components/PageHeader.jsx","components/Navigation.jsx","containers/Home.jsx","containers/Stories.jsx","containers/Mood.jsx","containers/Share.jsx","containers/Detail.jsx","containers/Information.jsx","containers/App.js","serviceWorker.js","models/Story.jsx","api/index.js","store/StoryStore.js","store/index.js","index.js"],"names":["ROUTES","home","stories","mood","share","detail","information","PageHeader","_ref","title","react_default","a","createElement","defaultProps","Navigation","react_router_dom","exact","to","admin","about","Home","Fragment","components_PageHeader","components_Navigation","Stories","Mood","Share","Detail","Information","App","react_router","path","strict","component","Component","Boolean","window","location","hostname","match","Story","description","city","_this","this","id","arguments","length","undefined","uuid","v4","Object","classCallCheck","setId","value","setDesc","setCity","updateFromServer","values","_id","decorate","observable","action","computed","Api","entity","getAll","asyncToGenerator","regenerator_default","mark","_callee","r","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","create","_ref2","_callee2","_context2","getOptions","_x","apply","update","_ref3","_callee3","_context3","_x2","delete","_ref4","_callee4","_context4","_x3","method","body","options","toUpperCase","headers","content-type","JSON","stringify","configure","enforceActions","StoryStore","rootStore","api","then","d","forEach","_addStories","addStory","data","newStory","push","storyValues","console","log","story","runInAction","store","Store","storyStore","ReactDOM","render","index_module","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92d63217.chunk.js","sourcesContent":["export const ROUTES = {\n  home: `/`,\n  stories: `/stories`,\n  mood: `/mood`,\n  share: `/share`,\n  detail: `/detail`,\n  information: `/information`\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import styles from \"./PageHeader.module.css\";\n\nconst PageHeader = ({ title }) => {\n  return <h1>{title}</h1>;\n};\n\nPageHeader.defaultProps = {\n  title: `De Derde Boodschap`\n};\n\nPageHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default PageHeader;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n// import styles from \"./Navigation.module.css\";\nimport { ROUTES } from \"../constants\";\n\nconst Navigation = () => {\n  return (\n    <div>\n      <NavLink exact={true} to={ROUTES.home}>\n        De Derde Boodschap\n      </NavLink>\n      <NavLink to={ROUTES.admin}>Stories</NavLink>\n      <NavLink to={ROUTES.about}>Mood</NavLink>\n      <NavLink to={ROUTES.about}>Tell us your story</NavLink>\n      <NavLink to={ROUTES.about}>Macbeth</NavLink>\n      <NavLink to={ROUTES.about}>Huh?</NavLink>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport Navigation from \"../components/Navigation\";\n\nconst Home = () => {\n  return (\n    <>\n      <PageHeader title={`De Derde Boodschap`} />\n      <Navigation />\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport Navigation from \"../components/Navigation\";\n\nconst Stories = () => {\n  return (\n    <>\n      <PageHeader title={`All stories`} />\n      <Navigation />\n    </>\n  );\n};\n\nexport default Stories;\n","import React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport Navigation from \"../components/Navigation\";\n\nconst Mood = () => {\n  return (\n    <>\n      <PageHeader title={`How are we doing?`} />\n      <Navigation />\n    </>\n  );\n};\n\nexport default Mood;\n","import React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport Navigation from \"../components/Navigation\";\n\nconst Share = () => {\n  return (\n    <>\n      <PageHeader title={`Tell us your story`} />\n      <Navigation />\n    </>\n  );\n};\n\nexport default Share;\n","import React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport Navigation from \"../components/Navigation\";\n\nconst Detail = () => {\n  return (\n    <>\n      <PageHeader title={`Detailpagina`} />\n      <Navigation />\n    </>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport Navigation from \"../components/Navigation\";\n\nconst Information = () => {\n  return (\n    <>\n      <PageHeader title={`Huh?`} />\n      <Navigation />\n    </>\n  );\n};\n\nexport default Information;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n// import styles from \"./App.module.css\";\n\nimport { ROUTES } from \"../constants\";\nimport Home from \"./Home\";\nimport Stories from \"./Stories\";\nimport Mood from \"./Mood\";\nimport Share from \"./Share\";\nimport Detail from \"./Detail\";\nimport Information from \"./Information\";\n\nclass App extends Component {\n  render() {\n    return (\n      <main>\n        <Switch>\n          <Route path={ROUTES.home} exact strict component={Home} />\n          <Route path={ROUTES.stories} component={Stories} />\n          <Route path={ROUTES.mood} component={Mood} />\n          <Route path={ROUTES.share} component={Share} />\n          <Route path={ROUTES.detail} component={Detail} />\n          <Route path={ROUTES.information} component={Information} />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import uuid from \"uuid\";\nimport { decorate, observable, action, computed } from \"mobx\";\n\nclass Story {\n  constructor(description, city, id = uuid.v4()) {\n    this.id = id;\n    this.description = description;\n    this.city = city;\n    //this.mood = mood;\n  }\n\n  setId = value => (this.id = value);\n  setDesc = value => (this.description = value);\n  setCity = value => (this.city = value);\n\n  updateFromServer = values => {\n    this.setId(values._id);\n    this.setDesc(values.description);\n    this.setCity(values.city);\n  };\n\n  get values() {\n    return { description: this.description, city: this.city };\n  }\n}\n\ndecorate(Story, {\n  id: observable,\n  description: observable,\n  city: observable,\n  setId: action,\n  setDesc: action,\n  setCity: action,\n  values: computed\n});\n\nexport default Story;\n","class Api {\n  constructor(entity) {\n    this.entity = entity;\n  }\n\n  getAll = async () => {\n    const r = await fetch(`/api/${this.entity}`);\n    return await r.json();\n  };\n\n  create = async entity => {\n    const r = await fetch(\n      `/api/${this.entity}`,\n      this.getOptions(`post`, entity.values)\n    );\n    return await r.json();\n  };\n\n  update = async entity => {\n    const r = await fetch(\n      `/api/${this.entity}/${entity.id}`,\n      this.getOptions(`put`, entity.values)\n    );\n    return await r.json();\n  };\n\n  delete = async entity => {\n    const r = await fetch(\n      `/api/${this.entity}/${entity.id}`,\n      this.getOptions(`delete`)\n    );\n    return r.json();\n  };\n\n  getOptions = (method, body = null) => {\n    const options = {\n      method: method.toUpperCase(),\n      headers: {\n        \"content-type\": `application/json`\n      }\n    };\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n    return options;\n  };\n}\n\nexport default Api;\n","import { decorate, observable, configure, action, runInAction } from \"mobx\";\nimport Story from \"../models/Story\";\nimport Api from \"../api\";\n\nconfigure({ enforceActions: `observed` });\n\nclass StoryStore {\n  stories = [];\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.api = new Api(`stories`);\n    this.getAll();\n  }\n\n  getAll = () => {\n    this.api.getAll().then(d => d.forEach(this._addStories));\n  };\n\n  addStory = data => {\n    const newStory = new Story();\n    newStory.updateFromServer(data);\n    this.stories.push(newStory);\n    this.api\n      .create(newStory)\n      .then(storyValues => newStory.updateFromServer(storyValues));\n  };\n\n  _addStories = values => {\n    console.log(values);\n    const story = new Story();\n    story.updateFromServer(values);\n    runInAction(() => this.stories.push(story));\n  };\n}\n\ndecorate(StoryStore, {\n  stories: observable,\n  addStory: action\n});\n\nexport default StoryStore;\n","import StoryStore from \"./StoryStore\";\n\nclass Store {\n  constructor() {\n    this.storyStore = new StoryStore(this);\n  }\n}\n\nexport default new Store();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport store from \"./store\";\nimport { Provider } from \"mobx-react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider {...store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}